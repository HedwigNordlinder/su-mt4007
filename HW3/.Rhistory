local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic() + labs(ylab="",xlab="")
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic() + labs(ylab="",xlab="")
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4)
plot
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic()
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic()
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4)
plot
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic() + theme(axis.title.x = element_blank(),  axis.title.y = element_blank())
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4)
plot
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
if(i == 1) {
base_plot <- base_plot + labs(ylab = y_name)
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4)
plot
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic()
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic()
}
if(i == 1) {
base_plot <- base_plot + labs(ylab = y_name)
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4)
plot
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic()
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic()
}
if(i == 1) {
base_plot <- base_plot
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4)
plot
?plot_grid
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4)
plot
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4, labels = c("a,b,c,d"))
plot
plots <- c()
for(i in 1:4) {
local_plot <- ggplot()
local_plots <- c()
for(j in 1:4) {
x_name = names(iris_data)[j]
y_name = names(iris_data)[i]
base_plot <- ggplot()
if(i == j) {
base_plot <- ggplot(data = iris_data, aes(y = .data[[y_name]], col = species, fill = species)) +
geom_density(alpha = 0.5, show.legend = FALSE) + coord_flip() + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
else {
base_plot <- ggplot(data = iris_data, aes(x = .data[[x_name]], y = .data[[y_name]], col =             species)) + geom_point(show.legend = FALSE) + theme_classic() + theme(axis.title.x = element_blank(), axis.title.y = element_blank())
}
local_plots[[j]] <- base_plot
}
local_plot <- plot_grid(local_plots[[1]], local_plots[[2]], local_plots[[3]], local_plots[[4]], ncol = 4)
plots[[i]] <- local_plot
}
plot <- plot_grid(plots[[1]], plots[[2]], plots[[3]], plots[[4]], nrow = 4, labels = list("a,b,c,d"))
plot
library(GGally)
install.packages("GGally")
library(ggally)
library(GGally)
ggpairs(iris)
iris_data
names(iris_data)
library(GGally)
ggpairs(iris, aes(color=species))
library(GGally)
ggpairs(iris_data, aes(color=species))
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5))
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5), upper = list(continuous = "points"))
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5),columns=1:4, upper = list(continuous = "points"))
?ggpairs
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5),columns=1:4, upper = list(continuous = "points"), legend = 1)
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5),columns=1:4, upper = list(continuous = "points"), legend = c(1,1))
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5),columns=1:4, upper = list(continuous = "points"), legend = c(1,1), switch = "both")
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5),columns=1:4, upper = list(continuous = "points"), legend = c(1,1), switch = "both") + guides(alpha = "none")
library(GGally)
ggpairs(iris_data, aes(color=species, alpha = 0.5),columns=1:4, upper = list(continuous = "points"), legend = 1, switch = "both") + guides(alpha = "none")
library(tidyverse)
artportalen <- read.csv("artportalen.csv")
artportalen <- artportalen %>% mutate(Antal = ifelse(is.na(as.numeric(Antal)),1, as.numeric(Antal)))
species_counts <- artportalen %>% group_by(Artnamn) %>% summarise(count = sum(Antal))
sorted_species_counts <- species_counts[order(-species_counts$count),]
most_common_species <- sorted_species_counts[1:3,]
rarest_species <- sorted_species_counts[sorted_species_counts$count == 1,]
most_common_species
rarest_species
monthly_distribution <- artportalen %>% filter(Artnamn %in% most_common_species$Artnamn) %>% mutate(month = format(as.Date(Startdatum), "%m")) %>% group_by(Artnamn, month) %>% summarise(count = sum(Antal))
blames_distr <- monthly_distribution %>% filter(Artnamn == "Gr√∂nsiska")
koltrast_distr <- monthly_distribution %>% filter(Artnamn == "Soth√∂na")
talgoxe_distr <- monthly_distribution %>% filter(Artnamn == "Gr√§sand")
blames_plot <- ggplot(blames_distr, aes(x = month, y = count)) + geom_bar(stat="identity")
koltrast_plot <- ggplot(koltrast_distr, aes(x = month, y = count)) + geom_bar(stat="identity")
talgoxe_plot <- ggplot(talgoxe_distr, aes(x = month, y = count)) + geom_bar(stat="identity")
plot_grid(blames_plot, koltrast_plot, talgoxe_plot, ncol = 3)
library(tidyverse)
artportalen <- read.csv("artportalen.csv")
artportalen <- artportalen %>% mutate(Antal = ifelse(is.na(as.numeric(Antal)),1, as.numeric(Antal)))
species_counts <- artportalen %>% group_by(Artnamn) %>% summarise(count = sum(Antal))
sorted_species_counts <- species_counts[order(-species_counts$count),]
most_common_species <- sorted_species_counts[1:3,]
rarest_species <- sorted_species_counts[sorted_species_counts$count == 1,]
most_common_species
rarest_species
monthly_distribution <- artportalen %>% filter(Artnamn %in% most_common_species$Artnamn) %>% mutate(month = format(as.Date(Startdatum), "%m")) %>% group_by(Artnamn, month) %>% summarise(count = sum(Antal))
blames_distr <- monthly_distribution %>% filter(Artnamn == "Gr√∂nsiska")
koltrast_distr <- monthly_distribution %>% filter(Artnamn == "Soth√∂na")
talgoxe_distr <- monthly_distribution %>% filter(Artnamn == "Gr√§sand")
blames_plot <- ggplot(blames_distr, aes(x = month, y = count)) + geom_bar(stat="identity")
koltrast_plot <- ggplot(koltrast_distr, aes(x = month, y = count)) + geom_bar(stat="identity")
talgoxe_plot <- ggplot(talgoxe_distr, aes(x = month, y = count)) + geom_bar(stat="identity")
plot_grid(blames_plot, koltrast_plot, talgoxe_plot, ncol = 3)
set.seed(050903)
library(pROC)
stroke_data_cleaned <- stroke_data %>% mutate(bmi = as.numeric(bmi), avg_glucose_level = as.numeric(avg_glucose_level), age = as.numeric(age), gender = as.factor(gender), ever_married = as.factor(ever_married), Residence_type = as.factor(Residence_type), smoking_status = as.factor(smoking_status))
final_cleaned_data <- stroke_data_cleaned[complete.cases(stroke_data_cleaned),]
training_indicies <- runif(nrow(final_cleaned_data)) < 0.8
testing_indicies <- !training_indicies
training_data <- final_cleaned_data[training_indicies,]
testing_data <- final_cleaned_data[testing_indicies,]
giga_model <- glm(stroke ~ ., data = training_data, family = "binomial")
summary(giga_model)
predictions <- predict(giga_model, testing_data, type = "response")
ggroc(roc(testing_data$stroke, predictions))
stroke_data <- read.csv("stroke-data.csv")
knitr::kable(head(stroke_data))
stockholm_species_counts <- artportalen %>% filter(Kommun == "Stockholm") %>% group_by(Artnamn) %>% summarise(stockholm_count = sum(Antal))
merged_frame <- merge(species_counts, stockholm_species_counts)
merged_frame$stockholm_share <- merged_frame$stockholm_count / merged_frame$count
merged_frame <- merged_frame %>% filter(count != 1)
sort_stockholm_share <- merged_frame[order(-merged_frame$stockholm_share),]
knitr::kable(sort_stockholm_share[1:40,])
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
table_to_present <- kmb_fixed %>% select(X2015, X2016, X2017, X2018, X2019)
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
table_to_present <- kmb_fixed %>% select(X2015, X2016, X2017, X2018, X2019)
knitr::kable(table_to_present)
names(kmb_fixed)
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
table_to_present <- kmb_fixed %>% select(iso.3, X2015, X2016, X2017, X2018, X2019)
knitr::kable(table_to_present)
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
table_to_present <- kmb_fixed %>% select(iso.3, X2015, X2016, X2017, X2018, X2019) %>% filter(iso.3 %in% c("CHN","IND","USA","IDN","BRA"))
knitr::kable(table_to_present)
is.na(kmb_fixed)
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
if(is.na(row[i])) {
fixed_row[i] = -1
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
table_to_present <- kmb_fixed %>% select(iso.3, X2015, X2016, X2017, X2018, X2019) %>% filter(iso.3 %in% c("CHN","IND","USA","IDN","BRA"))
knitr::kable(table_to_present)
is.nan(kmb_fixed)
is.na(kmb_fixed)
sum(as.numeric(is.na(kmb_fixed)))
knitr::knit("HW3.Rmd",output = "HW3.md")
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
if(is.nan(row[i])) {
print("nan")
fixed_row[i] = -1
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
if(is.na(row[i])) {
print(row[i])
fixed_row[i] = -1
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
table_to_present <- kmb_fixed %>% select(iso.3, X2015, X2016, X2017, X2018, X2019) %>% filter(iso.3 %in% c("CHN","IND","USA","IDN","BRA"))
knitr::kable(table_to_present)
cell_phone_data <- read.csv("cell_phones_total.csv")
na_to_zero_pre_1975 <- function(row) {
fixed_row = row
for(i in 2:13) {
if(is.na(row[i])) {
fixed_row[i] = 0
}
}
return(fixed_row)
}
pre_1975_na_fixed <- cell_phone_data
for(i in 1:nrow(cell_phone_data)) {
pre_1975_na_fixed[i,] <- na_to_zero_pre_1975(pre_1975_na_fixed[i,])
}
fix_kmb_problem <- function(row) {
fixed_row = row
for(i in 2:length(row)) {
if(grepl("k",row[i])) {
fixed_row[i] <- as.numeric(gsub("k","",row[i]))*1000
}
else if(grepl("M",row[i])) {
fixed_row[i] <- as.numeric(gsub("M","",row[i]))*1000*1000
}
else if(grepl("B",row[i])) {
fixed_row[i] <- as.numeric(gsub("B","",row[i]))*1000*1000*1000
}
if(!is.na(row[i]) && row[i] == "") {
fixed_row[i] = "missing"
}
if(is.na(row[i])) {
fixed_row[i] = -1
}
}
return(fixed_row)
}
kmb_fixed <- pre_1975_na_fixed
for(i in 1:nrow(cell_phone_data)) {
kmb_fixed[i,] <- fix_kmb_problem(pre_1975_na_fixed[i,])
}
table_to_present <- kmb_fixed %>% select(iso.3, X2015, X2016, X2017, X2018, X2019) %>% filter(iso.3 %in% c("CHN","IND","USA","IDN","BRA"))
knitr::kable(table_to_present)
knitr::knit("HW3.Rmd", output = "HW3.md")
