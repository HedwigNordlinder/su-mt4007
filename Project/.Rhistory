hist(log(oregon_data$V3[oregon_data$V1 == 2]))
oregon_data <- read.csv("oregon.csv", header = FALSE)
hist(oregon_data$V2[oregon_data$V1 == 1])
hist(oregon_data$V2[oregon_data$V1 == 2])
hist(oregon_data$V3[oregon_data$V1 == 1])
hist(oregon_data$V3[oregon_data$V1 == 2])
install.packages(c("bookdown", "rmarkdown"))
install.packages(c("bookdown", "rmarkdown"))
knitr::opts_chunk$set(
echo = TRUE,
fig.path = "figures/",
fig.align = "center"
)
arizona_data <- read.csv("arizona.csv", header = FALSE)
colnames(arizona_data) <- c("year","seed","nonseed")
par(mfrow=c(1,2))
hist(arizona_data$nonseed, main = "", xlab = "Nederbörd", ylab = "Frekvens")
hist(arizona_data$nonseed, main = "", xlab = "log Nederbörd", ylab = "Frekvens")
par(mfrow=c(1,2))
hist(arizona_data$nonseed, main = "", xlab = "Nederbörd", ylab = "Frekvens")
hist(log(arizona_data$nonseed), main = "", xlab = "log Nederbörd", ylab = "Frekvens")
par(mfrow=c(1,2))
hist(arizona_data$nonseed - arizona_data$seed, main = "Skillnad i nederbörd", xlab = "Nederbörd", ylab = "Frekvens")
hist(log(arizona_data$nonseed / arizona_data$seed), main = "log kvot av nederbörd", xlab = "log Nederbörd", ylab = "Frekvens")
wilcox.test(arizona_data$seed, arizona_data$nonseed, alternative = "greater", paired = TRUE)
oregon_data
oregon_data <- read.csv("oregon.csv", header = FALSE)
linear_oregon_model <- lm(V2 ~ as.factor(V1), data = oregon_data)
oregon_data <- read.csv("oregon.csv", header = FALSE)
linear_oregon_model <- lm(V2 ~ as.factor(V1), data = oregon_data)
summary(linear_oregon_model)
oregon_data <- read.csv("oregon.csv", header = FALSE)
linear_oregon_model <- lm(V2 ~ as.factor(V1), data = oregon_data)
summary(linear_oregon_model)
plot(linear_oregon_model)
oregon_data <- read.csv("oregon.csv", header = FALSE)
linear_oregon_model <- lm(V2 ~ as.factor(V1), data = oregon_data)
summary(linear_oregon_model)
plot(linear_oregon_model)[2]
plot(linear_oregon_model
)
plots <- plot(linear_oregon_model)
plots
oregon_data <- read.csv("oregon.csv", header = FALSE)
linear_oregon_model <- lm(V2 ~ as.factor(V1), data = oregon_data)
summary(linear_oregon_model)
qqnorm(resid(linear_oregon_model))
oregon_data <- read.csv("oregon.csv", header = FALSE)
linear_oregon_model_area_1 <- lm(V2 ~ as.factor(V1), data = oregon_data)
linear_oregon_model_area_2 <- lm(V3 ~ as.factor(V1), data = oregon_data)
summary(linear_oregon_model_area_1)
summary(linear_oregon_model_area_2)
par(mfrow=c(1,2))
qqnorm(resid(linear_oregon_model_area_1))
qqline(resid(linear_oregon_model_area_1))
qqnorm(resid(linear_oregon_model_area_2))
qqline(resid(linear_oregon_model_area_2))
wilcox.test(oregon_data$V2[oregon_data$V1 == 1], oregon_data$V2[oregon_data$V1 == 2], alternative = "less", mu = 0, paired = FALSE)
wilcox.test(oregon_data$V3[oregon_data$V1 == 1], oregon_data$V3[oregon_data$V1 == 2], alternative = "less", mu = 0, paired = FALSE)
oregon_data <- read.csv("oregon.csv", header = FALSE)
linear_oregon_model_area_1 <- lm(V2 ~ as.factor(V1), data = oregon_data)
linear_oregon_model_area_2 <- lm(V3 ~ as.factor(V1), data = oregon_data)
summary(linear_oregon_model_area_1)
summary(linear_oregon_model_area_2)
par(mfrow=c(1,2))
qqnorm(resid(linear_oregon_model_area_1), main = "Q-Q plot för områdestyp 1")
qqline(resid(linear_oregon_model_area_1))
qqnorm(resid(linear_oregon_model_area_2), main = "Q-Q plot för områdestyp 2")
qqline(resid(linear_oregon_model_area_2))
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
source("~/Documents/Code/R/eurusdsim/main.R", echo=TRUE)
setwd("~/Documents/Code/R/su-mt4007/Project")
library(remotes)
remotes::install_github("filipwastberg/swemaps2")
# install.packages(c("openxlsx","patchwork","grid","gridExtra","pxweb","tidyverse","ggplot2","ggthemes","gifski"))
source("geometry_functions.R")
library(openxlsx)
library(patchwork)
library(grid)
library(gridExtra)
library(ggplot2)
labour_market_plots <- list()
for(i in 1:4) {
labour_market_regions <- read.xlsx("la.xlsx", sheet = i)
labour_market_geometry <- generate_labour_market_geometry(labour_market_regions)
current_plot <- ggplot(labour_market_geometry, aes(fill=name)) +
geom_sf() +
scale_fill_viridis_d() +
theme_swemap2() +
theme(
legend.position = "none",
plot.subtitle = element_text(size = 8, hjust = 0.5)
) +
labs(subtitle = paste("Year", 2019+i))
labour_market_plots <- append(labour_market_plots, list(current_plot))
}
ggsave("la_markets.png",
wrap_plots(labour_market_plots, ncol = 2, spacing = 0) +
plot_annotation(
title = "Swedish Labour Markets",
theme = theme(
plot.title = element_text(size = 14, hjust = 0),
plot.margin = unit(c(0, 0, 0, 0), "cm")
)
) &
theme(
plot.margin = unit(c(0, 0, 0, 0), "cm")
),
height = 12,
width = 8,
dpi = 300,bg = "white")
library(pxweb)
library(tidyverse)
# PXWEB query
pxweb_query_list <-
list("Region"=c("00","01","0114","0115","0117","0120","0123","0125","0126","0127","0128","0136","0138","0139","0140","0160","0162","0163","0180","0181","0182","0183","0184","0186","0187","0188","0191","0192","03","0305","0319","0330","0331","0360","0380","0381","0382","04","0428","0461","0480","0481","0482","0483","0484","0486","0488","05","0509","0512","0513","0560","0561","0562","0563","0580","0581","0582","0583","0584","0586","06","0604","0617","0642","0643","0662","0665","0680","0682","0683","0684","0685","0686","0687","07","0760","0761","0763","0764","0765","0767","0780","0781","08","0821","0834","0840","0860","0861","0862","0880","0881","0882","0883","0884","0885","09","0980","10","1060","1080","1081","1082","1083","12","1214","1230","1231","1233","1256","1257","1260","1261","1262","1263","1264","1265","1266","1267","1270","1272","1273","1275","1276","1277","1278","1280","1281","1282","1283","1284","1285","1286","1287","1290","1291","1292","1293","13","1315","1380","1381","1382","1383","1384","14","1401","1402","1407","1415","1419","1421","1427","1430","1435","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1452","1460","1461","1462","1463","1465","1466","1470","1471","1472","1473","1480","1481","1482","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","17","1715","1730","1737","1760","1761","1762","1763","1764","1765","1766","1780","1781","1782","1783","1784","1785","18","1814","1860","1861","1862","1863","1864","1880","1881","1882","1883","1884","1885","19","1904","1907","1960","1961","1962","1980","1981","1982","1983","1984","20","2021","2023","2026","2029","2031","2034","2039","2061","2062","2080","2081","2082","2083","2084","2085","21","2101","2104","2121","2132","2161","2180","2181","2182","2183","2184","22","2260","2262","2280","2281","2282","2283","2284","23","2303","2305","2309","2313","2321","2326","2361","2380","24","2401","2403","2404","2409","2417","2418","2421","2422","2425","2460","2462","2463","2480","2481","2482","25","2505","2506","2510","2513","2514","2518","2521","2523","2560","2580","2581","2582","2583","2584"),
"Alder"=c("0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100+","tot"),
"Kon"=c("1","2"),
"ContentsCode"=c("BE0101A9"),
"Tid"=c("2020","2021","2022","2023"))
# Download data
population_px_data <-
pxweb_get(url = "https://api.scb.se/OV0104/v1/doris/en/ssd/BE/BE0101/BE0101A/FolkmangdNov",
query = pxweb_query_list)
# Convert to data.frame
population_px_data_frame <- as.data.frame(population_px_data, column.name.type = "text", variable.value.type = "code")
municipality_populations <- population_px_data_frame %>% filter(age == "tot") %>% mutate(year_index = as.numeric(year) - 2019) %>% select(-year) %>% group_by(year_index,region) %>% rename(population = Number ) %>% summarise(population = sum(population))
source("parsing_functions.R")
cases_frame <- read.csv("cases.csv", sep = ";")
cases_frame <- cases_frame %>% mutate(municipal_code = parse_municipality_name(Kommun))
cases_frame <- cases_frame %>% pivot_longer(cols = -c(Kommun, municipal_code))
cases_frame <- cases_frame %>% mutate(time = parse_timestamps(name))
cases_frame <- cases_frame %>% mutate(year_index = times_to_years(time))
cases_frame <- merge(cases_frame, municipality_populations, by.x = c("municipal_code", "year_index"), by.y = c("region", "year_index"))
library(swemaps2)
library(ggplot2)
library(ggthemes)
library(gifski)
time_points <- unique(cases_frame$time)
sorted_times <- time_points[order(
as.numeric(sub("-.*", "", time_points)),  # year part
as.numeric(sub(".*-", "", time_points))   # week part
)]
municipal_plot_files <- c()
for(i in sorted_times) {
current_week <- cases_frame %>% filter(time == i) %>% mutate(cases = value)
filename <- paste0("img/municipal_week_",i,".png")
merged_counties <- merge(municipality, current_week, by.x="kn_kod", by.y="municipal_code")
merged_counties$infected_share <- merged_counties$cases / merged_counties$population
current_plot <- ggplot(merged_counties,aes(fill=infected_share*100)) + geom_sf() + scale_fill_viridis_c(limits=c(0,100*max(merged_counties$infected_share))) + theme_swemap2() + labs(title = "COVID-19 Infection Rate by Municipality", subtitle = paste("Time:",i), fill = "Infected %")
ggsave(filename, current_plot)
municipal_plot_files <- c(municipal_plot_files, filename)
}
gifski(municipal_plot_files, "municipal_spread.gif", delay = 0.2)
la_tagged_cases_frame <- tag_municipalities_years("la.xlsx",cases_frame,time_to_year)
tagged_cases_frame <- tag_county(la_tagged_cases_frame)
tagged_cases_frame <- tagged_cases_frame %>% select(municipal_code, value, time, Kod, county,year_index, population) %>% rename(cases = value, la_region = Kod)
tagged_cases_frame <- tagged_cases_frame %>% filter(municipal_code != "0980")
source("geometry_functions.R")
la_adjacency_frame <- data.frame()
for(j in 1:4) {
labour_market <- read.xlsx("la.xlsx", sheet = j)
la_sf <- generate_labour_market_geometry(labour_market)
la_sf_adjacency <- generate_adjacency_dataframe(la_sf)
current_tagged_cases_frame <- tagged_cases_frame %>% filter(year_index == j)
adjacent_cases <- rep(0,nrow(current_tagged_cases_frame))
for(i in 1:nrow(current_tagged_cases_frame)) {
current_la_region <- current_tagged_cases_frame$la_region[i]
current_labour_market_adjacency <- la_sf_adjacency %>%
filter(name == current_la_region)
current_time <- current_tagged_cases_frame$time[i]
current_time_frame <- current_tagged_cases_frame %>%
filter(time == current_time)
adjacency_filter <- as.logical(current_labour_market_adjacency[1,1:(ncol(current_labour_market_adjacency)-1)])
adjacent_cases[i] <- sum(current_time_frame[adjacency_filter,]$cases)
}
current_tagged_cases_frame$adjacent_cases <- adjacent_cases
la_adjacency_frame <- rbind(la_adjacency_frame, current_tagged_cases_frame)
}
county_adjacency_frame <- data.frame()
county_sf_adjacency <- generate_adjacency_dataframe(county)
county_sf_adjacency$ln_kod <- county$ln_kod
for(j in 1:4) {
current_tagged_cases_frame <- tagged_cases_frame %>% filter(year_index == j)
adjacent_cases <- rep(0,nrow(current_tagged_cases_frame))
for(i in 1:nrow(current_tagged_cases_frame)) {
current_county <- current_tagged_cases_frame$county[i]
current_county_adjacency <- county_sf_adjacency %>%
filter(ln_kod == current_county)
current_time <- current_tagged_cases_frame$time[i]
current_time_frame <- current_tagged_cases_frame %>%
filter(time == current_time)
adjacency_filter <- as.logical(current_county_adjacency[1,1:(ncol(current_county_adjacency)-1)])
adjacent_cases[i] <- sum(current_time_frame[adjacency_filter,]$cases)
}
current_tagged_cases_frame$adjacent_cases <- adjacent_cases
county_adjacency_frame <- rbind(county_adjacency_frame, current_tagged_cases_frame)
}
compound_la_adjacency_frame <- rbind(week_on_week_case_ratios(la_adjacency_frame %>% filter(year_index == 1)), week_on_week_case_ratios(la_adjacency_frame %>% filter(year_index == 2)), week_on_week_case_ratios(la_adjacency_frame %>% filter(year_index == 3)), week_on_week_case_ratios(la_adjacency_frame %>% filter(year_index == 4)))
compound_county_adjacency_frame <- rbind(week_on_week_case_ratios(county_adjacency_frame %>% filter(year_index == 1)), week_on_week_case_ratios(county_adjacency_frame %>% filter(year_index == 2)), week_on_week_case_ratios(county_adjacency_frame %>% filter(year_index == 3)), week_on_week_case_ratios(county_adjacency_frame %>% filter(year_index == 4)))
source("correlation_functions.R")
la_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(la_region), data = compound_la_adjacency_frame)
county_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(county), data = compound_county_adjacency_frame)
compound_la_adjacency_frame$fe_residuals <- resid(la_anova_model)
compound_county_adjacency_frame$fe_residuals <- resid(county_anova_model)
la_municipal_correlations <- municipal_spearman_rho(compound_la_adjacency_frame)
county_municipal_correlations <- municipal_spearman_rho(compound_county_adjacency_frame)
la_municipal_correlations <- merge(la_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
county_municipal_correlations <- merge(county_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
la_correlation_plot <- ggplot(la_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
scale_fill_gradient2(name = "Correlation\ncoefficient",
limits = c(-0.4, 0.4)) +  # adjust limits as needed
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2,
legend.position = "none"  # Remove legend from first plot
) +
labs(title = "LA model")
county_correlation_plot <- ggplot(county_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
scale_fill_gradient2(name = "Spearmans rho",
limits = c(-0.4, 0.4)) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2
) +
labs(title = "Oxenstierna/county model")
combined_plot <- la_correlation_plot + county_correlation_plot +
plot_layout(guides = "collect", widths = c(1, 1)) &
theme(
plot.title = element_text(size = 12, hjust = 0.5),
legend.position = "right",
legend.justification = "left"
)
combined_plot <- combined_plot +
plot_annotation(
title = "Spearman's correlation coefficients for municipalities",
theme = theme(
plot.title = element_text(size = 14, hjust = 0.5, margin = margin(b = 20))
)
)
combined_plot
la_mean <- mean(la_municipal_correlations$srho)
county_mean <- mean(county_municipal_correlations$srho)
ggplot() +
geom_histogram(data = la_municipal_correlations,
aes(x = srho, y = after_stat(count/sum(count)), fill = "LA Municipal"),
alpha = 0.5,
position = "identity") +
geom_histogram(data = county_municipal_correlations,
aes(x = srho, y = after_stat(count/sum(count)), fill = "County Municipal"),
alpha = 0.5,
position = "identity") +
geom_vline(aes(xintercept = la_mean),
color = "blue",
linetype = "dashed",
size = 1) +
geom_vline(aes(xintercept = county_mean),
color = "red",
linetype = "dashed",
size = 1) +
labs(title = "Distribution of Spatial Correlations",
x = "Spatial Correlation (ρ)",
y = "Frequency",
fill = "Dataset") +
theme_minimal()
la_mean
county_mean
source("correlation_functions.R")
la_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(la_region), data = compound_la_adjacency_frame)
county_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(county), data = compound_county_adjacency_frame)
compound_la_adjacency_frame$fe_residuals <- resid(la_anova_model)
compound_county_adjacency_frame$fe_residuals <- resid(county_anova_model)
la_municipal_correlations <- municipal_spearman_rho(compound_la_adjacency_frame)
county_municipal_correlations <- municipal_spearman_rho(compound_county_adjacency_frame)
county_municipal_correlations <- merge(la_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
county_municipal_correlations <- merge(county_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
la_correlation_plot <- ggplot(la_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
scale_fill_gradient2(name = "Correlation\ncoefficient",
limits = c(-0.4, 0.4)) +  # adjust limits as needed
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2,
legend.position = "none"  # Remove legend from first plot
) +
labs(title = "LA model")
county_correlation_plot <- ggplot(county_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
scale_fill_gradient2(name = "Spearmans rho",
limits = c(-0.4, 0.4)) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2
) +
labs(title = "Oxenstierna/county model")
combined_plot <- la_correlation_plot + county_correlation_plot +
plot_layout(guides = "collect", widths = c(1, 1)) &
theme(
plot.title = element_text(size = 12, hjust = 0.5),
legend.position = "right",
legend.justification = "left"
)
combined_plot <- combined_plot +
plot_annotation(
title = "Spearman's correlation coefficients for municipalities",
theme = theme(
plot.title = element_text(size = 14, hjust = 0.5, margin = margin(b = 20))
)
)
combined_plot
source("correlation_functions.R")
la_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(la_region), data = compound_la_adjacency_frame)
county_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(county), data = compound_county_adjacency_frame)
compound_la_adjacency_frame$fe_residuals <- resid(la_anova_model)
compound_county_adjacency_frame$fe_residuals <- resid(county_anova_model)
la_municipal_correlations <- municipal_spearman_rho(compound_la_adjacency_frame)
county_municipal_correlations <- municipal_spearman_rho(compound_county_adjacency_frame)
la_municipal_correlations <- merge(la_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
county_municipal_correlations <- merge(county_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
la_correlation_plot <- ggplot(la_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
scale_fill_gradient2(name = "Correlation\ncoefficient",
limits = c(-0.4, 0.4)) +  # adjust limits as needed
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2,
legend.position = "none"  # Remove legend from first plot
) +
labs(title = "LA model")
county_correlation_plot <- ggplot(county_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
scale_fill_gradient2(name = "Spearmans rho",
limits = c(-0.4, 0.4)) +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2
) +
labs(title = "Oxenstierna/county model")
combined_plot <- la_correlation_plot + county_correlation_plot +
plot_layout(guides = "collect", widths = c(1, 1)) &
theme(
plot.title = element_text(size = 12, hjust = 0.5),
legend.position = "right",
legend.justification = "left"
)
combined_plot <- combined_plot +
plot_annotation(
title = "Spearman's correlation coefficients for municipalities",
theme = theme(
plot.title = element_text(size = 14, hjust = 0.5, margin = margin(b = 20))
)
)
combined_plot
la_mean <- mean(la_municipal_correlations$srho)
county_mean <- mean(county_municipal_correlations$srho)
ggplot() +
geom_histogram(data = la_municipal_correlations,
aes(x = srho, y = after_stat(count/sum(count)), fill = "LA Municipal"),
alpha = 0.5,
position = "identity") +
geom_histogram(data = county_municipal_correlations,
aes(x = srho, y = after_stat(count/sum(count)), fill = "County Municipal"),
alpha = 0.5,
position = "identity") +
geom_vline(aes(xintercept = la_mean),
color = "blue",
linetype = "dashed",
size = 1) +
geom_vline(aes(xintercept = county_mean),
color = "red",
linetype = "dashed",
size = 1) +
labs(title = "Distribution of Spatial Correlations",
x = "Spatial Correlation (ρ)",
y = "Frequency",
fill = "Dataset") +
theme_minimal()
source("correlation_functions.R")
la_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(la_region), data = compound_la_adjacency_frame)
county_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(county), data = compound_county_adjacency_frame)
compound_la_adjacency_frame$fe_residuals <- resid(la_anova_model)
compound_county_adjacency_frame$fe_residuals <- resid(county_anova_model)
la_municipal_correlations <- municipal_correlations(compound_la_adjacency_frame)
source("correlation_functions.R")
la_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(la_region), data = compound_la_adjacency_frame)
county_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(county), data = compound_county_adjacency_frame)
compound_la_adjacency_frame$fe_residuals <- resid(la_anova_model)
compound_county_adjacency_frame$fe_residuals <- resid(county_anova_model)
la_municipal_correlations <- municipal_spearman_rho(compound_la_adjacency_frame)
county_municipal_correlations <- municipal_spearman_rho(compound_county_adjacency_frame)
la_municipal_correlations <- merge(la_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
county_municipal_correlations <- merge(county_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
la_correlation_plot <- ggplot(la_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
common_fill_scale +
theme_swemap2() +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2  # For Sweden's proportions
) +
labs(title = "LA model")
source("correlation_functions.R")
la_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(la_region), data = compound_la_adjacency_frame)
county_anova_model <- lm(log(case_ratios) ~ as.factor(time) + as.factor(county), data = compound_county_adjacency_frame)
compound_la_adjacency_frame$fe_residuals <- resid(la_anova_model)
compound_county_adjacency_frame$fe_residuals <- resid(county_anova_model)
la_municipal_correlations <- municipal_spearman_rho(compound_la_adjacency_frame)
county_municipal_correlations <- municipal_spearman_rho(compound_county_adjacency_frame)
la_municipal_correlations <- merge(la_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
county_municipal_correlations <- merge(county_municipal_correlations, municipality, by.x = "municipal_code", by.y = "kn_kod")
la_correlation_plot <- ggplot(la_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2  # For Sweden's proportions
) +
labs(title = "LA model")
county_correlation_plot <- ggplot(county_municipal_correlations,
aes(geometry=geometry, fill=srho)) +
geom_sf() +
theme_swemap2() +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.margin = margin(5, 5, 5, 5),
aspect.ratio = 2
) +
labs(title = "Oxenstierna/county model")
combined_plot <- la_correlation_plot + county_correlation_plot +
plot_layout(guides = "collect", widths = c(1, 1)) &
theme(
plot.title = element_text(size = 12, hjust = 0.5),
legend.position = "right",  # Move legend to right
legend.justification = "left"  # Align legend with plots
)
combined_plot <- combined_plot +
plot_annotation(
title = "Spearman's correlation coefficients for municipalities",
theme = theme(
plot.title = element_text(size = 14, hjust = 0.5, margin = margin(b = 20))
)
)
combined_plot
la_mean <- mean(la_municipal_correlations$srho)
county_mean <- mean(county_municipal_correlations$srho)
ggplot() +
geom_histogram(data = la_municipal_correlations,
aes(x = srho, y = after_stat(count/sum(count)), fill = "LA Municipal"),
alpha = 0.5,
position = "identity") +
geom_histogram(data = county_municipal_correlations,
aes(x = srho, y = after_stat(count/sum(count)), fill = "County Municipal"),
alpha = 0.5,
position = "identity") +
geom_vline(aes(xintercept = la_mean),
color = "blue",
linetype = "dashed",
size = 1) +
geom_vline(aes(xintercept = county_mean),
color = "red",
linetype = "dashed",
size = 1) +
labs(title = "Distribution of Spatial Correlations",
x = "Spatial Correlation (ρ)",
y = "Frequency",
fill = "Dataset") +
theme_minimal()
la_municipal_correlations
la_municipal_correlations$srho
mean(la_municipal_correlations$srho)
mean(county_municipal_correlations$srho)
